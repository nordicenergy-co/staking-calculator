{"ast":null,"code":"var _jsxFileName = \"/home/fluffy/Desktop/create-react-app/my-app/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.result = () => {\n      if (this.state.isGenesisPhase == true) {\n        return this.state.stakedTokens * 0.00001 * this.state.txNumber * this.state.txCost / 800 * parseFloat(this.state.nodeCategory) * 2.74;\n      }\n\n      return this.state.stakedTokens * 0.00001 * this.state.txNumber * this.state.txCost / 800 * parseFloat(this.state.nodeCategory);\n    };\n\n    this.state = {\n      stakedTokens: 1000,\n      tokenPrice: 0.1,\n      txNumber: 80000,\n      txCost: 0.01,\n      nodeCategory: 1.0,\n      isGenesisPhase: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleCheckboxChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.checked\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Staked Tokens\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"stakedTokens\",\n      value: this.state.stakedTokens,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"nordicenergy Token Price(USD)\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"tokenPrice\",\n      value: this.state.tokenPrice,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Average Number of Transactions\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"txNumber\",\n      value: this.state.txNumber,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Per Transaction Cost(USD)\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"txCost\",\n      value: this.state.txCost,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"nodeCategorySelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Node Category\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"nodeCategory\",\n      id: \"nodeCategorySelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Node\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Trust Node\"), React.createElement(\"option\", {\n      value: \"1.2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 1 Month\"), React.createElement(\"option\", {\n      value: \"1.4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 3 Months\"), React.createElement(\"option\", {\n      value: \"1.6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 6 Months\"), React.createElement(\"option\", {\n      value: \"1.8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 12 Months\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Genesis Phase Activated\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"isGenesisPhase\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"My Current nordicenergy Value(USD) =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, (this.state.tokenPrice * this.state.stakedTokens).toFixed(2) + \"$\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Average Daily Earning(USD) =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.result().toFixed(2) + \"$\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Average Monthly Earning(USD) =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, (this.result() * 30).toFixed(2) + \"$\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Average Yearly Earning(USD) =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, (this.result() * 365).toFixed(2) + \"$\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Annual Staking Rate =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, (this.result() * 365 / this.state.tokenPrice / this.state.stakedTokens * 100).toFixed(2) + \"%\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Contribute 1 lit for this website (ETH Wallet) =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"0x8e4b7c6aE8EC30cbf7Bb6F0a6DD87AB96e3710eb\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"GitHub Link for improvements =    \"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"https://github.com/fmanea/nordicenergy-stake-reactJs.git\")));\n  }\n\n}\n\nfunction App() {\n  return new Login()\n  /*\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n    </header>\n  </div>\n  */\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fluffy/Desktop/create-react-app/my-app/src/App.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","Login","constructor","result","state","isGenesisPhase","stakedTokens","txNumber","txCost","parseFloat","nodeCategory","tokenPrice","handleChange","bind","handleCheckboxChange","evt","setState","target","name","value","checked","render","toFixed","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\n\nclass Login extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      stakedTokens: 1000,\n      tokenPrice: 0.1,\n      txNumber: 80000,\n      txCost: 0.01,\n      nodeCategory: 1.0,\n      isGenesisPhase: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    \n  }\n\n  result = () => { \n    if (this.state.isGenesisPhase== true)\n    {\n      return (this.state.stakedTokens * 0.00001 * this.state.txNumber * this.state.txCost / 800 * parseFloat(this.state.nodeCategory)*2.74 );\n    }\n    return (this.state.stakedTokens * 0.00001 * this.state.txNumber * this.state.txCost / 800 * parseFloat(this.state.nodeCategory) );\n   };\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleCheckboxChange(evt)\n  {\n    this.setState({ [evt.target.name]: evt.target.checked });\n  }\n\n  render() {\n    return (\n      <form>\n        <FormGroup>\n          <label>Staked Tokens</label>\n          <input type=\"number\" name=\"stakedTokens\" value={this.state.stakedTokens} onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>nordicenergy Token Price(USD)</label>\n          <input type=\"number\" name=\"tokenPrice\" value={this.state.tokenPrice} onChange={this.handleChange} />\n        </FormGroup> \n\n        <FormGroup>\n          <label>Average Number of Transactions</label>\n          <input type=\"number\" name=\"txNumber\" value={this.state.txNumber} onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>Per Transaction Cost(USD)</label>\n          <input type=\"number\" name=\"txCost\" value={this.state.txCost} onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"nodeCategorySelect\">Node Category</Label>\n          <Input type=\"select\" name=\"nodeCategory\" id=\"nodeCategorySelect\" onChange={this.handleChange} >\n            <option value=\"1\">Node</option>\n            <option value=\"2\">Trust Node</option>\n            <option value=\"1.2\">nordicenergy Pool Staking 1 Month</option>\n            <option value=\"1.4\">nordicenergy Pool Staking 3 Months</option>\n            <option value=\"1.6\">nordicenergy Pool Staking 6 Months</option>\n            <option value=\"1.8\">nordicenergy Pool Staking 12 Months</option>\n          </Input>\n        </FormGroup>\n\n        <FormGroup>\n          <label>Genesis Phase Activated</label>\n          <input type=\"checkbox\" name=\"isGenesisPhase\" onChange={this.handleCheckboxChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>My Current nordicenergy Value(USD) =    </label>\n          <label>{(this.state.tokenPrice*this.state.stakedTokens).toFixed(2) + \"$\"}</label>\n        </FormGroup>\n\n        <FormGroup>\n          <label>Average Daily Earning(USD) =    </label>\n          <label>{(this.result()).toFixed(2)+\"$\"}</label>\n        </FormGroup>\n\n        <FormGroup>\n          <label>Average Monthly Earning(USD) =    </label>\n          <label>{(this.result() *30).toFixed(2)+\"$\"}</label>\n        </FormGroup>\n\n        <FormGroup>\n          <label>Average Yearly Earning(USD) =    </label>\n          <label>{(this.result() *365).toFixed(2)+\"$\"}</label>\n        </FormGroup>\n\n        <FormGroup>\n          <label>Annual Staking Rate =    </label>\n          <label>{(this.result() *365 / this.state.tokenPrice / this.state.stakedTokens * 100 ).toFixed(2)+\"%\"}</label>\n        </FormGroup>\n        <FormGroup>\n          <label>Contribute 1 lit for this website (ETH Wallet) =    </label>\n          <label>0x8e4b7c6aE8EC30cbf7Bb6F0a6DD87AB96e3710eb</label>\n        </FormGroup>\n        <FormGroup>\n          <label>GitHub Link for improvements =    </label>\n          <label>https://github.com/fmanea/nordicenergy-stake-reactJs.git</label>\n        </FormGroup>\n\n      </form>\n    );\n  }\n}\n\n\nfunction App() {\n  return (new Login()\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}