{"ast":null,"code":"var _jsxFileName = \"/home/fluffy/Desktop/create-react-app/my-app/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"StakedTokens\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"Stake tokens\",\n      value: \"1000\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"LitPrice\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"nordicenergy token Price\",\n      value: \"0.1\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"AverageNumberOfTx\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"Average Number of tx\",\n      value: \"80000\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"TxCost\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"Tx cost\",\n      value: \"0.01\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"IsGenesisPhase\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"Is genesis phase\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Node Category\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Node\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Trust Node\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 1 Month\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 3 Months\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 6 Months\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"nordicenergy Pool Staking 12 Months\"))));\n  }\n\n}\n\nfunction App() {\n  return new Login()\n  /*\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n    </header>\n  </div>\n  */\n  ;\n}\n\nInput.propTypes = {\n  children: PropTypes.node,\n  // type can be things like text, password, (typical input types) as well as select and textarea, providing children as you normally would to those.\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  state: deprecated(PropTypes.string, 'Please use the prop \"valid\"'),\n  valid: PropTypes.bool,\n  // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool,\n  // applied the is-invalid class when true, does nothing when false\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // ref will only get you a reference to the Input component, use innerRef to get a reference to the DOM input (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nCustomInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  // radio, checkbox, select, range, switch, file.\n  label: PropTypes.string,\n  // used for checkbox and radios\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool,\n  // applied the is-invalid class when true, does nothing when false\n  bsSize: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  // for type=\"select\"\n  // innerRef would be referenced to select node or input DOM node, depends on type property\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nForm.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // default: 'form'\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nFormFeedback.propTypes = {\n  children: PropTypes.node,\n  // Pass in a Component to override default element\n  tag: PropTypes.string,\n  // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  // default: undefined\n  tooltip: PropTypes.bool\n};\nFormGroup.propTypes = {\n  children: PropTypes.node,\n  // Applied the row class when true, does nothing when false\n  row: PropTypes.bool,\n  // Applied the form-check class when true, form-group when false\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  // Applied the disabled class when the check and disabled props are true, does nothing when false\n  disabled: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.string,\n  // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nFormText.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // default: 'small'\n  color: PropTypes.string,\n  // default: 'muted'\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/home/fluffy/Desktop/create-react-app/my-app/src/App.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","Login","constructor","state","email","password","handleChange","bind","evt","setState","target","name","value","render","App","propTypes","children","PropTypes","node","type","string","size","bsSize","deprecated","valid","bool","invalid","tag","oneOfType","func","innerRef","static","plaintext","addon","className","cssModule","object","CustomInput","id","number","isRequired","label","inline","array","FormFeedback","tooltip","row","check","disabled","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport './App.css';\n\nclass Login extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  render() {\n    return (\n      <form>\n        <FormGroup>\n          <label>StakedTokens</label>\n          <input type=\"number\" name=\"Stake tokens\" value=\"1000\" onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>LitPrice</label>\n          <input type=\"number\" name=\"nordicenergy token Price\" value=\"0.1\" onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>AverageNumberOfTx</label>\n          <input type=\"number\" name=\"Average Number of tx\" value=\"80000\" onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <label>TxCost</label>\n          <input type=\"number\" name=\"Tx cost\" value=\"0.01\" onChange={this.handleChange} />\n        </FormGroup>\n        <FormGroup>\n          <label>IsGenesisPhase</label>\n          <input type=\"checkbox\" name=\"Is genesis phase\" onChange={this.handleChange} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleSelect\">Node Category</Label>\n          <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n            <option>Node</option>\n            <option>Trust Node</option>\n            <option>nordicenergy Pool Staking 1 Month</option>\n            <option>nordicenergy Pool Staking 3 Months</option>\n            <option>nordicenergy Pool Staking 6 Months</option>\n            <option>nordicenergy Pool Staking 12 Months</option>\n          </Input>\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\n\nfunction App() {\n  return (new Login()\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n  );\n}\n\nInput.propTypes = {\n  children: PropTypes.node,\n  // type can be things like text, password, (typical input types) as well as select and textarea, providing children as you normally would to those.\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  state: deprecated(PropTypes.string, 'Please use the prop \"valid\"'),\n  valid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // ref will only get you a reference to the Input component, use innerRef to get a reference to the DOM input (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  static: deprecated(PropTypes.bool, 'Please use the prop \"plaintext\"'),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nCustomInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired, // radio, checkbox, select, range, switch, file.\n  label: PropTypes.string, // used for checkbox and radios\n  inline: PropTypes.bool,\n  valid: PropTypes.bool, // applied the is-valid class when true, does nothing when false\n  invalid: PropTypes.bool, // applied the is-invalid class when true, does nothing when false\n  bsSize: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]), // for type=\"select\"\n  // innerRef would be referenced to select node or input DOM node, depends on type property\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ])\n};\n\nForm.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'form'\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nFormFeedback.propTypes = {\n  children: PropTypes.node,\n  // Pass in a Component to override default element\n  tag: PropTypes.string, // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool, // default: undefined\n  tooltip: PropTypes.bool\n};\n\nFormGroup.propTypes = {\n  children: PropTypes.node,\n  // Applied the row class when true, does nothing when false\n  row: PropTypes.bool,\n  // Applied the form-check class when true, form-group when false\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  // Applied the disabled class when the check and disabled props are true, does nothing when false\n  disabled: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.string, // default: 'div'\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nFormText.propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  // Pass in a Component to override default element\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]), // default: 'small'\n  color: PropTypes.string, // default: 'muted'\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}